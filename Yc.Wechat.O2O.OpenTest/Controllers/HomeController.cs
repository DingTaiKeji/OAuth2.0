using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace Yc.Wechat.O2O.OpenTest.Controllers
{
    public class HomeController : Controller
    {

        private readonly HttpClient _httpClient = new HttpClient();

        public HomeController()
        {
            _httpClient.BaseAddress = new Uri("http://localhost:2929");
        }


        //
        // GET: /Home/

        public ActionResult Index()
        {
            return View();
        }


        /// <summary>
        /// 获取Token
        /// </summary>
        /// <param name="clientId"></param>
        /// <param name="clientSecret"></param>
        /// <returns></returns>
        public string GetToken(string clientId, string clientSecret)
        {
            var parameters = new Dictionary<string, string>();
            parameters.Add("client_id", clientId);
            parameters.Add("client_secret", clientSecret);
            parameters.Add("grant_type", "client_credentials");



            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(
        "Basic",
        Convert.ToBase64String(Encoding.ASCII.GetBytes(clientId + ":" + clientSecret)));
            var response = _httpClient.PostAsync("/token", new FormUrlEncodedContent(parameters));
            var responseValue = response.Result.Content.ReadAsStringAsync();
            return responseValue.Result;
        }

        public string RefreshToken(string clientId, string clientSecret, string refreshToken)
        {
            var parameters = new Dictionary<string, string>();
            parameters.Add("grant_type", "refresh_token");
            parameters.Add("refresh_token", refreshToken);

            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(
                "Basic",
                Convert.ToBase64String(Encoding.ASCII.GetBytes(clientId + ":" + clientSecret)));

            var response = _httpClient.PostAsync("/token", new FormUrlEncodedContent(parameters));
            var responseValue = response.Result.Content.ReadAsStringAsync();
            return responseValue.Result;
        }

        public string GetValue(string token)
        {
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var result = _httpClient.GetAsync("/api/home/5").Result.Content.ReadAsStringAsync();
            return result.Result;
        }
    }
}
